{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatTextInput = function ChatTextInput() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    text = _React$useState2[0],\n    onChangeText = _React$useState2[1];\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.regenerateResponseButton,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Regenerate Response\"\n      })\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeText,\n      value: text,\n      placeholder: \"Send a message..\"\n    }), _jsx(View, {\n      style: styles.iconContainer,\n      children: _jsx(Icon, {\n        name: \"telegram\",\n        size: 30,\n        color: \"#000\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    paddingRight: 90,\n    width: \"70%\"\n  },\n  inputContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignSelf: \"flex-end\"\n  },\n  iconContainer: {\n    position: \"absolute\",\n    top: 25,\n    right: 220\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10\n  }\n});\nexport default ChatTextInput;","map":{"version":3,"names":["React","SafeAreaView","Text","StyleSheet","TextInput","View","Icon","jsx","_jsx","jsxs","_jsxs","ChatTextInput","_React$useState","useState","_React$useState2","_slicedToArray","text","onChangeText","style","styles","inputContainer","children","TouchableOpacity","regenerateResponseButton","title","input","value","placeholder","iconContainer","name","size","color","create","height","margin","borderWidth","padding","paddingRight","width","flex","flexDirection","justifyContent","alignSelf","position","top","right","fontSize","fontWeight","textTransform","backgroundColor","borderRadius","paddingVertical","paddingHorizontal","marginVertical"],"sources":["/Users/nidhi.kumari2/react-native/chat-bot-ui/ChatTextInput.js"],"sourcesContent":["import React from \"react\";\nimport { SafeAreaView, Text, StyleSheet, TextInput, View } from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nconst ChatTextInput = () => {\n  const [text, onChangeText] = React.useState(\"\");\n\n  return (\n    /*<SafeAreaView>*/\n    <View style={styles.inputContainer}>\n      <TouchableOpacity style={styles.regenerateResponseButton}>\n        <Text style={styles.title}>Regenerate Response</Text>\n      </TouchableOpacity>\n      <TextInput\n        style={styles.input}\n        onChangeText={onChangeText}\n        value={text}\n        placeholder=\"Send a message..\"\n      />\n      <View style={styles.iconContainer}>\n        <Icon name=\"telegram\" size={30} color=\"#000\" />\n      </View>\n    </View>\n    /*</SafeAreaView>*/\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    paddingRight: 90,\n    width: \"70%\",\n  },\n  inputContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignSelf: \"flex-end\",\n  },\n  iconContainer: {\n    position: \"absolute\",\n    top: 25,\n    right: 220,\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\",\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10,\n  },\n});\n\nexport default ChatTextInput;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,IAAI;AAA8C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,eAAA,GAA6BZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAxCI,IAAI,GAAAF,gBAAA;IAAEG,YAAY,GAAAH,gBAAA;EAEzB,OAEEJ,KAAA,CAACL,IAAI;IAACa,KAAK,EAAEC,MAAM,CAACC,cAAe;IAAAC,QAAA,GACjCb,IAAA,CAACc,gBAAgB;MAACJ,KAAK,EAAEC,MAAM,CAACI,wBAAyB;MAAAF,QAAA,EACvDb,IAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACK,KAAM;QAAAH,QAAA,EAAC;MAAmB;IAAO,EACpC,EACnBb,IAAA,CAACJ,SAAS;MACRc,KAAK,EAAEC,MAAM,CAACM,KAAM;MACpBR,YAAY,EAAEA,YAAa;MAC3BS,KAAK,EAAEV,IAAK;MACZW,WAAW,EAAC;IAAkB,EAC9B,EACFnB,IAAA,CAACH,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACS,aAAc;MAAAP,QAAA,EAChCb,IAAA,CAACF,IAAI;QAACuB,IAAI,EAAC,UAAU;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAM;IAAG,EAC1C;EAAA,EACF;AAGX,CAAC;AAED,IAAMZ,MAAM,GAAGhB,UAAU,CAAC6B,MAAM,CAAC;EAC/BP,KAAK,EAAE;IACLQ,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDlB,cAAc,EAAE;IACdmB,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE;EACb,CAAC;EACDd,aAAa,EAAE;IACbe,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE;EACT,CAAC;EACDrB,KAAK,EAAE;IACLO,KAAK,EAAE,MAAM;IACbe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBL,SAAS,EAAE,QAAQ;IACnBM,aAAa,EAAE;EACjB,CAAC;EACDzB,wBAAwB,EAAE;IACxB0B,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBV,SAAS,EAAE,QAAQ;IACnBW,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe1C,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}