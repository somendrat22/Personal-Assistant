{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatTextInput = function ChatTextInput() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    text = _React$useState2[0],\n    setText = _React$useState2[1];\n  var onChangeText = function onChangeText(message) {\n    setText(message);\n  };\n  var sendMessage = function sendMessage() {\n    console.log(text);\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: text\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.regenerateResponseButton,\n          children: [_jsx(Icon, {\n            name: \"refresh\",\n            size: 20,\n            color: \"#000\"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"Regenerate Response\"\n          })]\n        }), _jsxs(View, {\n          style: styles.inputWrapper,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onChangeText: onChangeText,\n            onSubmitEditing: sendMessage,\n            value: text,\n            placeholder: \"Send a message..\"\n          }), _jsx(View, {\n            style: styles.iconContainer,\n            children: _jsx(Icon, {\n              name: \"telegram\",\n              size: 30,\n              color: \"#000\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  heading: {\n    fontSize: 60,\n    fontWeight: 'bold',\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  },\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: \"100%\",\n    alignSelf: \"center\"\n  },\n  inputContainer: {\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 16,\n    paddingBottom: 16\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  iconContainer: {\n    marginLeft: 16\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  text: {\n    marginLeft: 10\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10,\n    flexDirection: \"row\"\n  }\n});\nexport default ChatTextInput;","map":{"version":3,"names":["React","SafeAreaView","Text","TouchableOpacity","StyleSheet","TextInput","View","Icon","Ionicons","jsx","_jsx","jsxs","_jsxs","ChatTextInput","_React$useState","useState","_React$useState2","_slicedToArray","text","setText","onChangeText","message","sendMessage","console","log","style","flex","children","styles","heading","inputContainer","regenerateResponseButton","name","size","color","inputWrapper","input","onSubmitEditing","value","placeholder","iconContainer","create","fontSize","fontWeight","justifyContent","alignSelf","height","margin","borderWidth","padding","width","flexDirection","position","bottom","left","right","paddingHorizontal","paddingBottom","alignItems","marginLeft","title","textTransform","backgroundColor","borderRadius","paddingVertical","marginVertical"],"sources":["/Users/nidhi.kumari2/react-native/chat-bot-ui/ChatTextInput.js"],"sourcesContent":["import React from \"react\";\nimport {\n  SafeAreaView,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst ChatTextInput = () => {\n  const [text, setText] = React.useState(\"\");\n\n  const onChangeText = (message) => {\n    setText(message);\n  };\n\n  const sendMessage = () => {\n    console.log(text);\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1 }}>\n        <Text style={styles.heading}>{text}</Text>\n        <View style={styles.inputContainer}>\n          <TouchableOpacity style={styles.regenerateResponseButton}>\n            <Icon name=\"refresh\" size={20} color=\"#000\" />\n            <Text style={styles.text}>Regenerate Response</Text>\n          </TouchableOpacity>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              style={styles.input}\n              onChangeText={onChangeText}\n              onSubmitEditing={sendMessage}\n              value={text}\n              placeholder=\"Send a message..\"\n            />\n            <View style={styles.iconContainer}>\n              <Icon name=\"telegram\" size={30} color=\"#000\" />\n            </View>\n          </View>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  heading: {\n    fontSize: 60,\n    fontWeight: 'bold',\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: \"100%\",\n    alignSelf: \"center\",\n    //zIndex: 1,\n  },\n  inputContainer: {\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  iconContainer: {\n    marginLeft: 16,\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\",\n  },\n  text: {\n    marginLeft: 10,\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10,\n    flexDirection: \"row\",\n    //zIndex: 2,\n  },\n});\nexport default ChatTextInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}