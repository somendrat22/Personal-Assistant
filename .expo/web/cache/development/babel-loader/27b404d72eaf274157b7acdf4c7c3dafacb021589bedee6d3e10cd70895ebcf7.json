{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatTextInput = function ChatTextInput() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    text = _React$useState2[0],\n    onChangeText = _React$useState2[1];\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Homie\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.regenerateResponseButton,\n        children: [_jsx(Icon, {\n          name: \"refresh\",\n          size: 20,\n          color: \"#000\"\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Regenerate Response\"\n        })]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: onChangeText,\n        value: text,\n        placeholder: \"Send a message..\"\n      }), _jsx(View, {\n        style: styles.iconContainer,\n        children: _jsx(Icon, {\n          name: \"telegram\",\n          size: 30,\n          color: \"#000\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    paddingRight: 90,\n    width: \"70%\",\n    alignSelf: \"center\"\n  },\n  inputContainer: {\n    flex: 1,\n    flexDirection: \"col\",\n    justifyContent: \"center\",\n    alignSelf: \"flex-end\"\n  },\n  iconContainer: {\n    position: \"absolute\",\n    top: 90,\n    right: 220\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  text: {\n    marginLeft: 10\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10,\n    flexDirection: \"row\"\n  }\n});\nexport default ChatTextInput;","map":{"version":3,"names":["React","SafeAreaView","Text","TouchableOpacity","StyleSheet","TextInput","View","Icon","Ionicons","jsx","_jsx","jsxs","_jsxs","ChatTextInput","_React$useState","useState","_React$useState2","_slicedToArray","text","onChangeText","style","flex","flexDirection","children","styles","heading","inputContainer","regenerateResponseButton","name","size","color","input","value","placeholder","iconContainer","create","fontSize","fontWeight","height","margin","borderWidth","padding","paddingRight","width","alignSelf","justifyContent","position","top","right","title","textTransform","marginLeft","backgroundColor","borderRadius","paddingVertical","paddingHorizontal","marginVertical"],"sources":["/Users/nidhi.kumari2/react-native/chat-bot-ui/ChatTextInput.js"],"sourcesContent":["import React from \"react\";\nimport {\n  SafeAreaView,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst ChatTextInput = () => {\n  const [text, onChangeText] = React.useState(\"\");\n\n  return (\n    /*<SafeAreaView>*/\n    <View style={{ flex: 1, flexDirection: \"row\" }}>\n      <Text style={styles.heading}>Homie</Text>\n      <View style={styles.inputContainer}>\n        <TouchableOpacity style={styles.regenerateResponseButton}>\n          <Icon name=\"refresh\" size={20} color=\"#000\" />\n          <Text style={styles.text}>Regenerate Response</Text>\n        </TouchableOpacity>\n        <TextInput\n          style={styles.input}\n          onChangeText={onChangeText}\n          value={text}\n          placeholder=\"Send a message..\"\n        />\n        <View style={styles.iconContainer}>\n          <Icon name=\"telegram\" size={30} color=\"#000\" />\n        </View>\n      </View>\n    </View>\n    /*</SafeAreaView>*/\n  );\n};\n\nconst styles = StyleSheet.create({\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    paddingRight: 90,\n    width: \"70%\",\n    alignSelf: \"center\",\n    //zIndex: 1,\n  },\n  inputContainer: {\n    flex: 1,\n    flexDirection: \"col\",\n    justifyContent: \"center\",\n    alignSelf: \"flex-end\",\n  },\n  iconContainer: {\n    position: \"absolute\",\n    top: 90,\n    right: 220,\n    //zIndex: 0,\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\",\n  },\n  text: {\n    marginLeft: 10,\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10,\n    flexDirection: \"row\",\n    //zIndex: 2,\n  },\n});\n\nexport default ChatTextInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}