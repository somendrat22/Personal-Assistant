{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatTextInput = function ChatTextInput() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    enteredGoalText = _React$useState2[0],\n    setEnteredGoalText = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    courseGoals = _React$useState4[0],\n    setCourseGoals = _React$useState4[1];\n  var goalInputHandler = function goalInputHandler(enteredGoalText) {\n    setEnteredGoalText(enteredGoalText);\n  };\n  var addGoalHandler = function addGoalHandler() {\n    setCourseGoals(function (currentCourseGoals) {\n      return [].concat(_toConsumableArray(currentCourseGoals), [{\n        text: enteredGoalText,\n        id: Math.random().toString()\n      }]);\n    });\n    setEnteredGoalText(\"\");\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: courseGoals,\n      renderItem: function renderItem(itemData) {\n        return _jsx(View, {\n          style: styles.listItem,\n          children: _jsx(Text, {\n            style: styles.heading,\n            children: itemData.item.text\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return item.id;\n      },\n      style: styles.listContainer\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.regenerateResponseButton,\n        children: [_jsx(Icon, {\n          name: \"refresh\",\n          size: 20,\n          color: \"#000\"\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Regenerate Response\"\n        })]\n      }), _jsxs(View, {\n        style: styles.inputWrapper,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          onChangeText: goalInputHandler,\n          placeholder: \"Type your message..\",\n          value: enteredGoalText\n        }), _jsx(Button, {\n          title: \"Send message\",\n          onPress: addGoalHandler\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  listItem: {\n    padding: 10,\n    backgroundColor: \"#ccc\",\n    borderWidth: 1,\n    borderColor: \"#000\",\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  listContainer: {\n    flex: 1,\n    paddingHorizontal: 16\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  },\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: \"100%\",\n    alignSelf: \"center\"\n  },\n  inputContainer: {\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 16,\n    paddingBottom: 16\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  text: {\n    marginLeft: 10\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10,\n    flexDirection: \"row\"\n  }\n});\nexport default ChatTextInput;","map":{"version":3,"names":["React","FlatList","ScrollView","Button","SafeAreaView","Text","TouchableOpacity","StyleSheet","TextInput","View","Icon","Ionicons","jsx","_jsx","jsxs","_jsxs","ChatTextInput","_React$useState","useState","_React$useState2","_slicedToArray","enteredGoalText","setEnteredGoalText","_React$useState3","_React$useState4","courseGoals","setCourseGoals","goalInputHandler","addGoalHandler","currentCourseGoals","concat","_toConsumableArray","text","id","Math","random","toString","style","styles","container","children","data","renderItem","itemData","listItem","heading","item","keyExtractor","index","listContainer","inputContainer","regenerateResponseButton","name","size","color","inputWrapper","input","onChangeText","placeholder","value","title","onPress","create","flex","padding","backgroundColor","borderWidth","borderColor","marginVertical","borderRadius","paddingHorizontal","fontSize","fontWeight","justifyContent","alignSelf","height","margin","width","flexDirection","position","bottom","left","right","paddingBottom","alignItems","textTransform","marginLeft","paddingVertical"],"sources":["/Users/nidhi.kumari2/react-native/chat-bot-ui/ChatTextInput.js"],"sourcesContent":["import React from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  Button,\n  SafeAreaView,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst ChatTextInput = () => {\n  const [enteredGoalText, setEnteredGoalText] = React.useState(\"\");\n  const [courseGoals, setCourseGoals] = React.useState([]);\n\n  const goalInputHandler = (enteredGoalText) => {\n    setEnteredGoalText(enteredGoalText);\n  };\n\n  const addGoalHandler = () => {\n    setCourseGoals((currentCourseGoals) => [\n      ...currentCourseGoals,\n      { text: enteredGoalText, id: Math.random().toString() },\n    ]);\n    setEnteredGoalText(\"\");\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList \n        data={courseGoals}\n        renderItem={(itemData) => {\n          return (\n            <View style={styles.listItem}>\n              <Text style={styles.heading}>{itemData.item.text}</Text>\n            </View>\n          );\n        }}\n        keyExtractor={(item, index) => {\n          return item.id;\n        }}\n        style={styles.listContainer}\n      />\n      <View style={styles.inputContainer}>\n        <TouchableOpacity style={styles.regenerateResponseButton}>\n          <Icon name=\"refresh\" size={20} color=\"#000\" />\n          <Text style={styles.text}>Regenerate Response</Text>\n        </TouchableOpacity>\n        <View style={styles.inputWrapper}>\n          <TextInput\n            style={styles.input}\n            onChangeText={goalInputHandler}\n            placeholder=\"Type your message..\"\n            value={enteredGoalText}\n          />\n          <Button title=\"Send message\" onPress={addGoalHandler}></Button>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  listItem: {\n    padding: 10,\n    backgroundColor: \"#ccc\",\n    borderWidth: 1,\n    borderColor: \"#000\",\n    marginVertical: 10,\n    borderRadius: 10,\n  },\n  listContainer: {\n    flex: 1,\n    paddingHorizontal: 16,\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n  input: {\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: \"100%\",\n    alignSelf: \"center\",\n  },\n  inputContainer: {\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\",\n  },\n  text: {\n    marginLeft: 10,\n  },\n  regenerateResponseButton: {\n    backgroundColor: \"#007AFF\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    alignSelf: \"center\",\n    marginVertical: 10,\n    flexDirection: \"row\",\n  },\n});\n\nexport default ChatTextInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}